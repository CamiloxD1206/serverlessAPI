service: userslambda
frameworkVersion: "3"
provider:
  name: aws
  runtime: nodejs18.x
  profile: admin
  region: us-east-1
  environment:
   SNS_ARN: ${ssm:/dev/SNS_ARN}
   TOKEN_DEV: ${ssm:/dev/TOKEN_SECRET} 
   DYNAMO_ARN: ${ssm:/dev/DYNAMO_ARN}
   
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - ${self:provider.environment.DYNAMO_ARN}
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: ${self:provider.environment.SNS_ARN}

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          method: get
          path: /helloworld

  createUser:
    handler: handler.createUser
    events:
      - http:
          method: post
          path: /usersct

  login:
   handler: handler.login
   events:
     - http:
         method: post
         path: /login

  getAllUsers:
    handler: handler.getAllUsers
    events:
      - http:
          method: get
          path: /users
  getUserById:
    handler: handler.getUserById
    events:
      - http:
          method: get
          path: /users/{id}
  deleteUser:
    handler: handler.deleteUser
    events:
      - http:
          method: delete
          path: /users/{id}
  updateUser:
    handler: handler.updateUser
    events:
      - http:
          method: put
          path: /users/{id}
  snsRequest:
    handler: handler.snsRequest
    events:
      - http:
          method: post
          path: /sns

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UsersTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
